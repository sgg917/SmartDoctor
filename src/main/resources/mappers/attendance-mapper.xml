<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="attendanceMapper">

	<resultMap id="attendanceResult" type="Attendance">
		<result column="att_no" property="attNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="att_date" property="attDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="status" property="status"/>
		<result column="total_time" property="totalTime"/>
		<result column="over_time" property="overTime"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="modify_no" property="modifyNo"/>
		<result column="dept_name" property="deptName"/>
		<result column="emp_name" property="empName"/>
	</resultMap>
	
	<resultMap id="vacationResult" type="Vacation">
		<result column="app_no" property="appNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="vac_days" property="vacDays"/>
		<result column="vac_cause" property="vacCause"/>
		<result column="status" property="status"/> 
		<result column="vac_remain" property="vacRemain"/>
		<result column="emp_name" property="empName"/>
		<result column="vac_status" property="vacStatus"/>
	</resultMap>
	
	<!-- 한 사원의 근태 개수 조회 -->
	<select id="selectListCount" resultType="_int">
	SELECT COUNT(*)
	  FROM (
	        SELECT
			       NVL(EMP_NO, #{empNo}) "emp_no"
			     , NVL(ATT_DATE, WORKING_DAY) "att_date"
			     , START_TIME "start_time"
			     , END_TIME "end_time"
			     , NVL(STATUS, '결근') "status"
			  FROM ( SELECT * FROM ATTENDANCE WHERE EMP_NO = #{empNo} )
			 RIGHT JOIN (
			            SELECT
			                   TO_CHAR(START_DT + LEVEL - 1, 'YYYY-MM-DD') "WORKING_DAY"
			                 , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
			              FROM
			              (
			                SELECT
			                       TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') AS START_DT
			                     , SYSDATE AS END_DT
			                  FROM DUAL
			              )
			              CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
			            ) ON (ATT_DATE = WORKING_DAY)
			 WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
			     AND NVL(EMP_NO, #{empNo}) = #{empNo}
			     AND WEEK IN ('월', '화', '수', '목', '금') 
	         <choose>
			 	<when test='startDate != null and endDate != null and !startDate.equals("") and !endDate.equals("")'>
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
			 	</when>
			 	<when test="startDate != null and !startDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{startDate})
			 	</when>
			 	<when test="endDate != null and !endDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{endDate})
			 	</when>
			 	<otherwise>
			 	</otherwise>
		 	 </choose>
			 <if test='statusArr != null'>
			   AND NVL(STATUS, '결근') IN
			   <foreach item="item" index="index" collection="statusArr" open="(" separator="," close=")">
			   	#{item}
			   </foreach>
			 </if>
	         ORDER BY WORKING_DAY
	        )
	</select>
	
	<!-- 한 사원의 근태 리스트 조회 -->
	<select id="selectAttendance" resultMap="attendanceResult">
		SELECT
		       NVL(EMP_NO, #{empNo}) "emp_no"
		     , NVL(ATT_DATE, WORKING_DAY) "att_date"
		     , NVL(START_TIME, '-') "start_time"
		     , NVL(END_TIME, '-') "end_time"
		     , NVL(STATUS, '결근') "status"
		  FROM ( SELECT * FROM ATTENDANCE WHERE EMP_NO = #{empNo} )
		 RIGHT JOIN (
		            SELECT
		                   TO_CHAR(START_DT + LEVEL - 1, 'YYYY-MM-DD') "WORKING_DAY"
		                 , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
		              FROM
		              (
		                SELECT
		                       TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') AS START_DT
		                     , SYSDATE AS END_DT
		                  FROM DUAL
		              )
		              CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
		            ) ON (ATT_DATE = WORKING_DAY)
		 WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
		     AND NVL(EMP_NO, #{empNo}) = #{empNo}
		     AND WEEK IN ('월', '화', '수', '목', '금') 
		<choose>
			<when test='startDate != null and endDate != null and !startDate.equals("") and !endDate.equals("")'>
			   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
			</when>
			<when test="startDate != null and !startDate.equals('')">
			   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{startDate})
			</when>
			<when test="endDate != null and !endDate.equals('')">
			   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{endDate})
			</when>
			<otherwise>
			</otherwise>
		</choose>
		<if test='statusArr != null'>
		  AND NVL(STATUS, '결근') IN
		  <foreach item="item" index="index" collection="statusArr" open="(" separator="," close=")">
		  	#{item}
		  </foreach>
		</if>
		 ORDER BY WORKING_DAY DESC
	</select>
	
	<!-- 출근 여부 -->
	<select id="selectStartTime" resultType="String">
		select start_time
		  from attendance
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	
	<!-- 퇴근 여부 -->
	<select id="selectEndTime" resultType="String">
		select
		       end_time
		  from attendance
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</select>
		
	<!-- 출근 insert -->
	<insert id="insertAttendance">
		insert 
		  into attendance
		  (
		    att_no
		  , emp_no
		  , att_date
		  , start_time
		  )
		  values
		  (
		    seq_attno.nextval
		  , #{empNo}
		  , to_char(sysdate, 'YYYY-MM-DD')
		  , to_char(sysdate, 'HH24:MI')
		  )
	</insert>
	
	<!-- 퇴근 & 근태 상태 update -->
	<update id="endAttendance">
		update attendance
		   set end_time = to_char(sysdate, 'HH24:MI')
		     , total_time = 
		     case when (to_date(to_char(sysdate, 'HH24:MI'), 'HH24:MI') - to_date(start_time, 'HH24:MI')) * 24 &lt; 5
	              then round( (to_date(to_char(sysdate, 'HH24:MI'), 'HH24:MI') - to_date(start_time, 'HH24:MI')) * 24, 0) 
	              when (to_date(to_char(sysdate, 'HH24:MI'), 'HH24:MI') - to_date(start_time, 'HH24:MI')) * 24 &gt;= 5
	              then round( (to_date(to_char(sysdate, 'HH24:MI'), 'HH24:MI') - to_date(start_time, 'HH24:MI')) * 24, 0) - 1
	         end
		     , status = 
		     case when to_date(start_time, 'HH24:MI') &gt; to_date('09:00', 'HH24:MI') then '지각'
		          when to_date(to_char(sysdate, 'HH24:MI'), 'HH24:MI') &gt;= to_date('18:00', 'HH24:MI') then '정상'
		     end
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</update>
	
	<!-- 한 사원의 휴가 개수 조회 -->
	<select id="selectVacListCount" resultType="_int">
		select
			   count(*)
		  from vacation
		 where emp_no = #{empNo}
	</select>
	
	<!-- 한 사원의 휴가 리스트 조회 -->
	<select id="selectVacationList" resultMap="vacationResult">
		select
		       app_no
		     , emp_name
		     , v.emp_no "emp_no"
		     , to_char(v.enroll_date, 'YYYY-MM-DD') "enroll_date"
		     , to_char(start_date, 'YYYY-MM-DD') "start_date"
		     , to_char(end_date, 'YYYY-MM-DD') "end_date"
		     , vac_cause
		     , appr_status "status"
		  from vacation v
		  join member m on (v.emp_no = m.emp_no)
		  join approval on (app_no = appr_no)
		 where v.emp_no = #{empNo}
		 order
		    by app_no desc
	</select>
	
	<!-- 한 사원의 휴가 잔여일수 조회 -->
	<select id="selectVacRemain" resultType="_int">
		select 20 - nvl( sum(vac_days), 0)
		  from vacation v
		  join approval on (app_no = appr_no)
		 where v.emp_no = #{empNo}
		   and appr_status = '완료'
	</select>
	
	<!-- 전사 근태 개수 조회 -->
	<select id="selectAllListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM (
				SELECT
				       NVL(A.ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) "ATT_DATE"
				     , C.DEPT_NAME
				     , C.EMP_NO
				     , C.EMP_NAME
				     , NVL(START_TIME, '-') "START_TIME"
				     , NVL(END_TIME, '-') "END_TIME"
				     , NVL(TOTAL_TIME, 0) "TOTAL_TIME"
				     , NVL(A.STATUS, '결근') "STATUS"
				  FROM ATTENDANCE A
				 RIGHT JOIN (
				            SELECT WORKING_DAY, WEEK, EMP_NO, EMP_NAME, DEPT_NAME
				              FROM (
				                    SELECT START_DT + LEVEL - 1 "WORKING_DAY"
				                         , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
				                      FROM (
				                      		SELECT TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') "START_DT"
				                      			 , SYSDATE "END_DT"
				                      		  FROM DUAL
				                      		)
				                    CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
				                    ), (
				                        SELECT E.EMP_NO
				                             , E.EMP_NAME
				                             , CASE WHEN D.DEPT_NAME != E.DEPT_NAME THEN D.DEPT_NAME || ' ' || E.DEPT_NAME
				                                    ELSE D.DEPT_NAME
				                                     END "DEPT_NAME"
				                          FROM (
				                                SELECT 
				                                       EMP_NO
				                                     , EMP_NAME
				                                     , CASE WHEN D1.UPPER_NO = 0 THEN D1.DEPT_NO
				                                            ELSE D1.UPPER_NO
				                                        END AS DEPT_NO
				                                     , DEPT_NAME
				                                  FROM MEMBER M
				                                  LEFT JOIN DEPARTMENT D1 ON (D1.DEPT_NO = M.DEPT_NO)
				                                ) E
				                          LEFT JOIN DEPARTMENT D ON (E.DEPT_NO = D.DEPT_NO)
				                        )
				            ) C ON (ATT_DATE = WORKING_DAY AND A.EMP_NO = C.EMP_NO)
				 WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
				   AND WEEK IN ('월', '화', '수', '목', '금')
				   AND NVL(A.STATUS, '결근') IN ('정상', '지각', '결근', '휴가')
		        )
	</select>
	
	<!-- 전사 근태 리스트 조회 -->
	<select id="selectAllAttendanceList" resultMap="attendanceResult">
		SELECT
		       NVL(A.ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) "ATT_DATE"
		     , C.DEPT_NAME
		     , C.EMP_NO
		     , C.EMP_NAME
		     , NVL(START_TIME, '-') "START_TIME"
		     , NVL(END_TIME, '-') "END_TIME"
		     , NVL(TOTAL_TIME, 0) "TOTAL_TIME"
		     , NVL(A.STATUS, '결근') "STATUS"
		  FROM ATTENDANCE A
		 RIGHT JOIN (
		            SELECT WORKING_DAY, WEEK, EMP_NO, EMP_NAME, DEPT_NAME
		              FROM (
		                    SELECT START_DT + LEVEL - 1 "WORKING_DAY"
		                         , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
		                      FROM (
		                      		SELECT TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') "START_DT"
		                      			 , SYSDATE "END_DT"
		                      		  FROM DUAL
		                      		)
		                    CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
		                    ), (
		                        SELECT E.EMP_NO
		                             , E.EMP_NAME
		                             , CASE WHEN D.DEPT_NAME != E.DEPT_NAME THEN D.DEPT_NAME || ' ' || E.DEPT_NAME
		                                    ELSE D.DEPT_NAME
		                                     END "DEPT_NAME"
		                          FROM (
		                                SELECT 
		                                       EMP_NO
		                                     , EMP_NAME
		                                     , CASE WHEN D1.UPPER_NO = 0 THEN D1.DEPT_NO
		                                            ELSE D1.UPPER_NO
		                                        END AS DEPT_NO
		                                     , DEPT_NAME
		                                  FROM MEMBER M
		                                  LEFT JOIN DEPARTMENT D1 ON (D1.DEPT_NO = M.DEPT_NO)
		                                ) E
		                          LEFT JOIN DEPARTMENT D ON (E.DEPT_NO = D.DEPT_NO)
		                        )
		            ) C ON (ATT_DATE = WORKING_DAY AND A.EMP_NO = C.EMP_NO)
		 WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
		   AND WEEK IN ('월', '화', '수', '목', '금')
		   AND NVL(A.STATUS, '결근') IN ('정상', '지각', '결근', '휴가')
		 ORDER BY WORKING_DAY DESC, EMP_NAME
	</select>
		
	<!-- 근태 정보 수정 -->
	<update id="updateAttendance">
		update attendance
		   set status = #{status}
		   	 , start_time = #{startTime}
		     , end_time = #{endTime}
		     , total_time = #{totalTime}
		     , modify_no = #{modifyNo}
		     , modify_date = to_char(sysdate, 'YYYY-MM-DD')
		 where emp_no = #{empNo}
		   and att_date = #{attDate}
	</update>
	
	<!-- 전사 근태 검색 수 -->
	<select id="ajaxSearchAttListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM (
		    SELECT
		           NVL(A.ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) "ATT_DATE"
		         , C.EMP_NO
		         , C.DEPT_NAME
		         , C.EMP_NAME
		         , NVL(START_TIME, '-') "START_TIME"
		         , NVL(END_TIME, '-') "END_TIME"
		         , NVL(TOTAL_TIME, 0) "TOTAL_TIME"
		         , NVL(A.STATUS, '결근') "STATUS"
		      FROM ATTENDANCE A
		     RIGHT JOIN (
		                SELECT WORKING_DAY, WEEK, EMP_NO, EMP_NAME, DEPT_NAME
		                  FROM (
		                        SELECT START_DT + LEVEL - 1 "WORKING_DAY"
		                             , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
		                          FROM (
		                          		SELECT TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') "START_DT"
		                          			 , SYSDATE "END_DT"
		                          		  FROM DUAL
		                          		)
		                        CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
		                        ), (
		                            SELECT E.EMP_NO
		                                 , E.EMP_NAME
		                                 , CASE WHEN D.DEPT_NAME != E.DEPT_NAME THEN D.DEPT_NAME || ' ' || E.DEPT_NAME
		                                        ELSE D.DEPT_NAME
		                                         end "DEPT_NAME"
		                              FROM (
		                                    SELECT 
		                                           EMP_NO
		                                         , EMP_NAME
		                                         , CASE WHEN D1.UPPER_NO = 0 THEN D1.DEPT_NO
		                                                ELSE D1.UPPER_NO
		                                            END AS DEPT_NO
		                                         , DEPT_NAME
		                                      FROM MEMBER M
		                                      LEFT JOIN DEPARTMENT D1 ON (D1.DEPT_NO = M.DEPT_NO)
		                                    ) E
		                              LEFT JOIN DEPARTMENT D ON (E.DEPT_NO = D.DEPT_NO)
		                            )
		                ) C ON (ATT_DATE = WORKING_DAY AND A.EMP_NO = C.EMP_NO)
		     WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
		       AND WEEK IN ('월', '화', '수', '목', '금')
		       AND NVL(A.STATUS, '결근') IN ('정상', '지각', '결근', '휴가')
		   <choose>
		   	<when test="type == 'dept_name'">
			   AND DEPT_NAME LIKE '%' || #{keyword} || '%' 
		   	</when>
		   	<otherwise>
		   	   AND EMP_NAME LIKE '%' || #{keyword} || '%'
		   	</otherwise>
		   </choose>
		 ORDER BY WORKING_DAY DESC 
		 	)
	</select>
	
	<!-- 전사 근태 검색 -->
	<select id="ajaxSearchAttendance" resultMap="attendanceResult">
		SELECT
	           NVL(A.ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) "ATT_DATE"
	         , C.EMP_NO
	         , C.DEPT_NAME
	         , C.EMP_NAME
	         , NVL(START_TIME, '-') "START_TIME"
	         , NVL(END_TIME, '-') "END_TIME"
	         , NVL(TOTAL_TIME, 0) "TOTAL_TIME"
	         , NVL(A.STATUS, '결근') "STATUS"
	      FROM ATTENDANCE A
	     RIGHT JOIN (
	                SELECT WORKING_DAY, WEEK, EMP_NO, EMP_NAME, DEPT_NAME
	                  FROM (
	                        SELECT START_DT + LEVEL - 1 "WORKING_DAY"
	                             , TO_CHAR(START_DT + LEVEL - 1, 'DY') "WEEK"
	                          FROM (
	                          		SELECT TO_DATE(SUBSTR(SYSDATE, 1, 2) || '0101') "START_DT"
	                          			 , SYSDATE "END_DT"
	                          		  FROM DUAL
	                          		)
	                        CONNECT BY LEVEL &lt;= END_DT - START_DT + 1
	                        ), (
	                            SELECT E.EMP_NO
	                                 , E.EMP_NAME
	                                 , CASE WHEN D.DEPT_NAME != E.DEPT_NAME THEN D.DEPT_NAME || ' ' || E.DEPT_NAME
	                                        ELSE D.DEPT_NAME
	                                         end "DEPT_NAME"
	                              FROM (
	                                    SELECT 
	                                           EMP_NO
	                                         , EMP_NAME
	                                         , CASE WHEN D1.UPPER_NO = 0 THEN D1.DEPT_NO
	                                                ELSE D1.UPPER_NO
	                                            END AS DEPT_NO
	                                         , DEPT_NAME
	                                      FROM MEMBER M
	                                      LEFT JOIN DEPARTMENT D1 ON (D1.DEPT_NO = M.DEPT_NO)
	                                    ) E
	                              LEFT JOIN DEPARTMENT D ON (E.DEPT_NO = D.DEPT_NO)
	                            )
	                ) C ON (ATT_DATE = WORKING_DAY AND A.EMP_NO = C.EMP_NO)
	     WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
	       AND WEEK IN ('월', '화', '수', '목', '금')
	       AND NVL(A.STATUS, '결근') IN ('정상', '지각', '결근', '휴가')
	   <choose>
	   	<when test="type == 'dept_name'">
		   AND DEPT_NAME LIKE '%' || #{keyword} || '%' 
	   	</when>
	   	<otherwise>
	   	   AND EMP_NAME LIKE '%' || #{keyword} || '%'
	   	</otherwise>
	   </choose>
	 ORDER BY WORKING_DAY DESC
	</select>
	
	<!-- 휴가를 사용한 사원들의 휴가잔여일수 조회 -->
	<select id="selectMemVacRemain" resultMap="vacationResult">
		select 
		       v.emp_no
		     , 20 - sum(vac_days) "vac_remain"
		  from vacation v
		  join approval on (app_no = appr_no)
		 where appr_status = '완료'
		 group by v.emp_no
	</select>

	<!-- 전자결재_휴가 신청 -->
	<insert id="insertApprVacation">
		insert
		  into approval
		  	 (
		  	   appr_no
			 , appr_title
			 , appr_total
			 , emp_no
			 , form_no
		  	 ) 
		values
			 (
			   seq_apno.nextval
			 , #{apprTitle}
			 , #{apprTotal}
			 , #{empNo}
			 , 1
			 )
	</insert>
	
	<insert id="insertVacation">
		insert
		  into vacation
		     (
		       app_no
		     , emp_no
		     , start_date
		     , end_date
		     , vac_days
		     , vac_cause
		     )
		values
			 (
			   seq_apno.currval
			 , #{empNo}
			 , #{startDate}
			 , #{endDate}
			 , #{vacDays}
			 , #{vacCause}
			 )
	</insert>
	
	<insert id="insertAttVacation">
		insert all
  		  into attendance 
  		  (
  		    att_no
  		  , emp_no
  		  , att_date
  		  , status
  		  ) 
  		  values
  		  (
  		  	seq_attno.nextval
  		  , #{empNo}
  		  , insertDate
  		  , '휴가'
  		  )
		  select 
		  	     to_char(to_date(#{startDate}) + level - 1, 'YYYY-MM-DD') insertDate
            from dual
		  <![CDATA[connect by level <= to_date(#{endDate}) - to_date(#{startDate}) + 1]]>
	</insert> 
	
	<!-- 휴가신청서 조회 -->
	<select id="selectVacation" resultMap="vacationResult">
		select
		       start_date
		     , end_date
		     , vac_days
		     , vac_cause
		  from vacation
		 where app_no = #{apprNo}
	</select>
	
</mapper>
